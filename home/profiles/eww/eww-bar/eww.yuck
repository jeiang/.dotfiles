;; Created   by https://github.com/rxyhn
;; Designed  by https://github.com/rxyhn
;; Original Maintained by https://github.com/rxyhn
;; MODIFIED

;; put path to aesthetic bar config files here ;;
(defvar eww "eww")
;; ;; Original
;; (defvar eww "{{eww}} -c {{eww-bar}}")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;							Widget Section's							 ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Launcher Widgets ;;
(defwidget launcher []
	(box :orientation "v"
		 :space-evenly "false"
		 :spacing -15
  	(button :class "launcher_icon"
		   	:onclick "scripts/launcher" "")))

;; Workspaces Widgets ;;
(defwidget workspaces []
	(literal :content workspace))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;;;							THIS NEEDS TO CHANGE
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(deflisten workspace "scripts/workspace")

;; Battery Widgets ;;
(defwidget bat []
	(box	:orientation "v"
			:space-evenly "false"
	(label	:class "bat"
			:halign "end"
			:text battery-icon
			:tooltip "Battery: ${battery-capacity}%")))
(defpoll battery-icon		:interval "1s"	"") ;; scripts/battery icon")
(defpoll battery-capacity	:interval "1s"	"scripts/battery")

;; Wifi Widgets ;;
(defwidget wifi []
	(box		:orientation "v"
				:tooltip wifi-name
	(button		:onclick "scripts/network menu"
				:class "wifi-icon" wifi-icon)))
(defpoll wifi-icon :interval "1s" "scripts/network icon")
(defpoll wifi-name :interval "1s" "scripts/network")

;; Brightness Widgets ;;
(defwidget bright []
  (eventbox :onhover "${eww} update bright=true"
  			:onhoverlost "${eww} update bright=false"
  			(box    :orientation "v"
			  		:space-evenly "false"
					:spacing 2
  			(revealer :transition "slideup"
			  		  :reveal bright
					  :duration "550ms"
  			(scale :class "bribar"
			  	   :value current-brightness
				   :tooltip "Brightness: ${current-brightness}%"
				   :onchange "scripts/brightness {}%"
				   :orientation "v"
				   :flipped true
				   :max 101
				   :min 0))
  			(label :class "brightness-icon"
			  	   :text "󰃠"))))
(defpoll current-brightness :interval "1s" "scripts/brightness")
(defpoll current-brightness :interval "1s" "scripts/brightness")
(defvar bright false)

;; Volume Widgets ;;
(defwidget volume []
	(eventbox :onhover "${eww} update volume=true"
			  :onhoverlost "${eww} update volume=false"
	(box      :orientation "v"
			  :space-evenly "false"
			  :spacing "2"
	(revealer :transition "slideup"
			  :reveal volume
			  :duration "550ms"
	(scale    :class "volbar"
			  :value current-volume
			  :orientation "v"
			  :flipped true
			  :tooltip "Volume: ${current-volume}%"
			  :max 101
			  :min 0
			  :onchange "scripts/volume {}%" ))
	(button   :onclick "scripts/volume menu"   :class "volume-icon" "${current-volume-icon}"))))
(defpoll current-volume :interval "1s" "scripts/volume")
(defpoll current-volume-icon :interval "1s" "scripts/volume icon")
(defvar volume false)

;; Control Panel Widgets ;;
(defwidget control []
	(box :orientation "v"
		 :space-evenly false
		 :class "control"
(bat)
(wifi)
(bright)
(volume)))

;; Clock Widgets ;;
(defwidget time []
	(box	:orientation "v"
			:class "time"
			:valign "end"
	(button	:onclick "scripts/clock menu"
			:class "time-hour" hour)
	(button	:onclick "scripts/clock menu"
			:class "time-min"  min)))
(defpoll hour	:interval "1s"	"scripts/clock hour")
(defpoll min	:interval "1s"	"scripts/clock minute")

;; Calendar Widgets ;;
(defwidget cal []
	(box :class "cal-box"
		 :orientation "v"
	(box :class "cal-inner-box"
	(calendar :class "cal"
			  :day calendar_day
			  :month calendar_month
			  :year calendar_year))))
(defpoll calendar_day 	:interval "10h"    "scripts/clock day")
(defpoll calendar_month :interval "10h"    "scripts/clock month")
(defpoll calendar_year 	:interval "10h"    "scripts/clock year")

;; Powermenu Widgets ;;
(defwidget power []
	(eventbox	:onhover "${eww} update power=true"
				:onhoverlost "${eww} update power=false"
	(box		:orientation "v"
				:space-evenly "false"
				:vexpand "false"
				:class "powermenu"
	(revealer	:transition "slideup"
				:reveal power
				:duration "550ms"
	(box		:orientation "v"
				:space-evenly "false"
	(button   	:class "button-bspres"
				:tooltip "Restart Window Manager"
				:onclick "scripts/power-menu wm-restart" "" )

  	(button		:class "button-reb"
	  			:tooltip "Reboot"
				:onclick "scripts/power-menu reboot"	"")

	(button		:class "button-quit"
				:tooltip "Logout"
				:onclick "scripts/power-menu logout" "")

	(button		:class "button-lock"
				:tooltip "Lock Screen"
				:onclick "scripts/power-menu lock-screen"	"")))

	(button		:class "button-off"
				:tooltip "Shutdown"
				:onclick "scripts/power-menu shutdown"	""))))
(defvar power false)

;; Top Widgets ;;
(defwidget top []
	(box	:orientation "v"
			:space-evenly "false"
			:valign "start"
(launcher)
(workspaces)))

;; Bottom Widgets ;;
(defwidget bottom []
	(box	:orientation "v"
			:space-evenly false
(time)
(power)))

;; End Widgets ;;
(defwidget end []
	(box :orientation "v"
		 :space-evenly "false"
		 :valign "end"
		 :spacing 5
(control)
(bottom)))

;; Bar Widgets ;;
(defwidget bar []
	(box :class "eww_bar"
		 :orientation "v"
		 :vexpand "false"
		 :hexpand "false"
(top)
(end)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;							Window Section's							 ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Bar Windows ;;
(defwindow bar
	:geometry (geometry :x "0"
						:y "0"
						:height "100%"
						:width "47px")
	:monitor 0
	:reserve (struts :distance "35px"
					 :side "left")
	:wm-ignore false
	:hexpand "false"
	:vexpand "false"
(bar))

;; Calendar Windows ;;
(defwindow calendar
	:geometry (geometry :x "70px"
						:y "65%"
						:width "270px"
						:height "60px")
(cal))
